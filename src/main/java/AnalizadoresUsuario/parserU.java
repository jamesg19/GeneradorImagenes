
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package AnalizadoresUsuario;

import java_cup.runtime.Symbol;
import java_cup.runtime.XMLElement;
import java.util.ArrayList;
import DatosEntrada.*;
import java.util.ArrayList;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class parserU extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return parserUSym.class;
}

  /** Default constructor. */
  @Deprecated
  public parserU() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public parserU(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parserU(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\011\000\002\002\004\000\002\002\003\000\002\006" +
    "\004\000\002\006\003\000\002\007\006\000\002\007\005" +
    "\000\002\011\003\000\002\012\005\000\002\010\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\020\000\004\010\007\001\002\000\004\013\013\001" +
    "\002\000\004\002\000\001\002\000\004\002\012\001\002" +
    "\000\004\013\ufffb\001\002\000\006\002\ufffe\010\007\001" +
    "\002\000\004\002\uffff\001\002\000\004\002\001\001\002" +
    "\000\006\007\017\011\015\001\002\000\004\006\021\001" +
    "\002\000\006\006\ufff9\007\ufff9\001\002\000\004\007\020" +
    "\001\002\000\006\002\ufffc\010\ufffc\001\002\000\006\002" +
    "\ufffd\010\ufffd\001\002\000\004\011\015\001\002\000\004" +
    "\007\ufffa\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\020\000\012\002\005\006\004\007\007\011\003\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\006\010\007\007\011\003\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\010\013" +
    "\012\015\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\010\021\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parserU$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parserU$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parserU$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


	
	private Symbol symU;
    
    ListaImagenCD lstImagen= new ListaImagenCD();
	ListaImagenCD arrayObjetos[]=new ListaImagenCD[300];
    ListaCapaCD lstCapa= new ListaCapaCD();
	ListaCapaCD arrayObjetosC[]=new ListaCapaCD[300];
    ListaUserCD lsUser= new ListaUserCD();
	ListaUserCD arrayObjetosU[]=new ListaUserCD[300];
    //CapaCD objCapa= new CapaDC();
    int ContIMG=-1;
    int ContCAP=-1;
    int ContUSER=-1;
    public Symbol getS(){
        return this.symU;
    }
	public parserU( LexerCupU lex){
	 super(lex);
	}
	public void report_error(String message, Object info){ 
		System.out.println("\nREPORT ERROR");
	}
	public void report_fatal_error(String message, Object info){
		System.out.println("\nREPORT FATAL");
	}
	
	public void syntax_error(Symbol cur_token) {

	System.out.println("...SE ESPERABA: "+symbl_name_from_id(expected_token_ids().get(0)));
        System.out.println("syntaxerr: " + symbl_name_from_id(cur_token.sym) +" Columna: "+cur_token.right+" Linea: "+cur_token.left+" Valor:"+cur_token.value);
    }
	protected int error_sync_size() {
        return 1;
    }
    public ListaImagenCD getLstImagen() {
        return lstImagen;
    }
    public ListaImagenCD[] getArrayImagen() {
        return arrayObjetos;
    }
    public ListaUserCD[] getArrayusuario() {
        return arrayObjetosU;
    }



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$parserU$actions {
  private final parserU parser;

  /** Constructor */
  CUP$parserU$actions(parserU parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$parserU$do_action_part00000000(
    int                        CUP$parserU$act_num,
    java_cup.runtime.lr_parser CUP$parserU$parser,
    java.util.Stack            CUP$parserU$stack,
    int                        CUP$parserU$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parserU$result;

      /* select the action based on the action number */
      switch (CUP$parserU$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= ESTADO_INICIAL EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parserU$stack.elementAt(CUP$parserU$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parserU$stack.elementAt(CUP$parserU$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$parserU$stack.elementAt(CUP$parserU$top-1)).value;
		RESULT = start_val;
              CUP$parserU$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parserU$stack.elementAt(CUP$parserU$top-1)), ((java_cup.runtime.Symbol)CUP$parserU$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parserU$parser.done_parsing();
          return CUP$parserU$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // ESTADO_INICIAL ::= USUARIO 
            {
              Object RESULT =null;

              CUP$parserU$result = parser.getSymbolFactory().newSymbol("ESTADO_INICIAL",0, ((java_cup.runtime.Symbol)CUP$parserU$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserU$stack.peek()), RESULT);
            }
          return CUP$parserU$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // USUARIO ::= BLOQUE_USUARIO USUARIO 
            {
              Object RESULT =null;

              CUP$parserU$result = parser.getSymbolFactory().newSymbol("USUARIO",4, ((java_cup.runtime.Symbol)CUP$parserU$stack.elementAt(CUP$parserU$top-1)), ((java_cup.runtime.Symbol)CUP$parserU$stack.peek()), RESULT);
            }
          return CUP$parserU$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // USUARIO ::= BLOQUE_USUARIO 
            {
              Object RESULT =null;

              CUP$parserU$result = parser.getSymbolFactory().newSymbol("USUARIO",4, ((java_cup.runtime.Symbol)CUP$parserU$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserU$stack.peek()), RESULT);
            }
          return CUP$parserU$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // BLOQUE_USUARIO ::= ID_USER DosPuntos AUX Punto_Coma 
            {
              Object RESULT =null;
		 arrayObjetosU[ContUSER]= lsUser;  
              CUP$parserU$result = parser.getSymbolFactory().newSymbol("BLOQUE_USUARIO",5, ((java_cup.runtime.Symbol)CUP$parserU$stack.elementAt(CUP$parserU$top-3)), ((java_cup.runtime.Symbol)CUP$parserU$stack.peek()), RESULT);
            }
          return CUP$parserU$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // BLOQUE_USUARIO ::= ID_USER DosPuntos Punto_Coma 
            {
              Object RESULT =null;
		 arrayObjetosU[ContUSER]= lsUser;  
              CUP$parserU$result = parser.getSymbolFactory().newSymbol("BLOQUE_USUARIO",5, ((java_cup.runtime.Symbol)CUP$parserU$stack.elementAt(CUP$parserU$top-2)), ((java_cup.runtime.Symbol)CUP$parserU$stack.peek()), RESULT);
            }
          return CUP$parserU$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // ID_USER ::= Usuario 
            {
              Object RESULT =null;
		int idUSERleft = ((java_cup.runtime.Symbol)CUP$parserU$stack.peek()).left;
		int idUSERright = ((java_cup.runtime.Symbol)CUP$parserU$stack.peek()).right;
		Object idUSER = (Object)((java_cup.runtime.Symbol) CUP$parserU$stack.peek()).value;
		ContUSER++; lsUser= new ListaUserCD(); lsUser.setIdUsuario(idUSER.toString()); lsUser.setId(ContUSER);     
              CUP$parserU$result = parser.getSymbolFactory().newSymbol("ID_USER",7, ((java_cup.runtime.Symbol)CUP$parserU$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserU$stack.peek()), RESULT);
            }
          return CUP$parserU$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // AUX ::= PARAMETRO_USUARIO Coma PARAMETRO_USUARIO 
            {
              Object RESULT =null;

              CUP$parserU$result = parser.getSymbolFactory().newSymbol("AUX",8, ((java_cup.runtime.Symbol)CUP$parserU$stack.elementAt(CUP$parserU$top-2)), ((java_cup.runtime.Symbol)CUP$parserU$stack.peek()), RESULT);
            }
          return CUP$parserU$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // PARAMETRO_USUARIO ::= Numeros 
            {
              Object RESULT =null;
		int idIMGleft = ((java_cup.runtime.Symbol)CUP$parserU$stack.peek()).left;
		int idIMGright = ((java_cup.runtime.Symbol)CUP$parserU$stack.peek()).right;
		Object idIMG = (Object)((java_cup.runtime.Symbol) CUP$parserU$stack.peek()).value;
		 lsUser.insertarNodo(idIMG.toString()); 
              CUP$parserU$result = parser.getSymbolFactory().newSymbol("PARAMETRO_USUARIO",6, ((java_cup.runtime.Symbol)CUP$parserU$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserU$stack.peek()), RESULT);
            }
          return CUP$parserU$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parserU$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$parserU$do_action(
    int                        CUP$parserU$act_num,
    java_cup.runtime.lr_parser CUP$parserU$parser,
    java.util.Stack            CUP$parserU$stack,
    int                        CUP$parserU$top)
    throws java.lang.Exception
    {
              return CUP$parserU$do_action_part00000000(
                               CUP$parserU$act_num,
                               CUP$parserU$parser,
                               CUP$parserU$stack,
                               CUP$parserU$top);
    }
}

}
